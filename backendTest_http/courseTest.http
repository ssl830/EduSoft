### 测试数据准备
### 1. 注册管理员账号
POST http://localhost:8080/user/register
Content-Type: application/json

{
    "userId": "admin",
    "username": "管理员",
    "passwordHash": "123456",
    "role": "teacher",
    "email": "admin@example.com"
}

### 2. 登录获取token
POST http://localhost:8080/user/login?userId=admin&password=123456
Content-Type: application/json

### 课程管理模块测试
### 1. 创建课程
POST http://localhost:8080/api/courses
Content-Type: application/json
satoken: {{token}}

{
    "teacherId": 1,
    "name": "Java程序设计",
    "code": "JAVA101",
    "outline": "Java基础语法、面向对象编程、集合框架等",
    "objective": "掌握Java编程基础，能够独立开发简单的Java应用程序",
    "assessment": "平时成绩30%，期末考试70%"
}

### 2. 创建第二个课程
POST http://localhost:8080/api/courses
Content-Type: application/json
satoken: {{token}}

{
    "teacherId": 1,
    "name": "数据库原理",
    "code": "DB101",
    "outline": "数据库基础、SQL语言、数据库设计等",
    "objective": "理解数据库基本原理，掌握SQL语言，能够进行数据库设计",
    "assessment": "平时成绩40%，期末考试60%"
}

### 3. 获取教师的课程列表
GET http://localhost:8080/api/courses/user/1
satoken: {{token}}

### 4. 获取第一个课程的详情
GET http://localhost:8080/api/courses/1
satoken: {{token}}

### 5. 更新第一个课程的信息
PUT http://localhost:8080/api/courses/1
Content-Type: application/json
satoken: {{token}}

{
    "teacherId": 1,
    "name": "Java程序设计（更新版3）",
    "code": "JAVA101_2025",
    "outline": "、面向对象编程、集合框架、多线程编程等",
    "objective": "掌握Java编程基础，能够独立开发多线程Java应用程序",
    "assessment": "平时成绩40%，期末考试60%"
}

### 6. 获取更新后的课程详情
GET http://localhost:8080/api/courses/1
satoken: {{token}}

### 7. 删除第二个课程
DELETE http://localhost:8080/api/courses/3
satoken: {{token}}

### 8. 验证第二个课程已被删除
GET http://localhost:8080/api/courses/3
satoken: {{token}}

### 9. 再次获取教师的课程列表，确认更新
GET http://localhost:8080/api/courses/user/1
satoken: {{token}}
